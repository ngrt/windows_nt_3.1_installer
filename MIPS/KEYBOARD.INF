[Identification]
    OptionType = KEYBOARD
[Options]
    STANDARD           = i8042prt , kbdclass
[MapOfOptions]
    OLI_83KEY          = STANDARD
    OLI_102KEY         = STANDARD
    OLI_86KEY          = STANDARD
    OLI_A101_102KEY    = STANDARD
    XT_83KEY           = STANDARD
    XT_84KEY           = STANDARD
    ATT_301            = STANDARD
    ATT_302            = STANDARD
    PCAT_ENHANCED      = STANDARD
    PCAT_86KEY         = STANDARD
    PCXT_84KEY         = STANDARD
    VECTRA_DIN         = STANDARD
[PortDrivers]
    i8042prt = !SERVICE_KERNEL_DRIVER, "Keyboard Port",  !SERVICE_ERROR_NORMAL, 1, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\drivers\i8042prt.sys" , 7
[ClassDrivers]
    kbdclass = !SERVICE_KERNEL_DRIVER, "Keyboard Class", !SERVICE_ERROR_NORMAL, 1, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\drivers\kbdclass.sys" , 7
[Identify]
    read-syms Identification
    set Status     = STATUS_SUCCESSFUL
    set Identifier = $(OptionType)
    set Media      = #("Source Media Descriptions", 1, 1)
    Return $(Status) $(Identifier) $(Media)
[ReturnOptions]
    set Status        = STATUS_FAILED
    set OptionList     = {}
    set OptionTextList = {}
    set LanguageList = ^(LanguagesSupported, 1)
    Ifcontains(i) $($0) in $(LanguageList)
        goto returnoptions
    else
        set Status = STATUS_NOLANGUAGE
        goto finish_ReturnOptions
    endif
returnoptions = +
    set OptionList     = ^(Options, 0)
    set OptionTextList = ^(OptionsText$($0), 1)
    set Status         = STATUS_SUCCESSFUL
finish_ReturnOptions = +
    Return $(Status) $(OptionList) $(OptionTextList)
[MapToSupportedOption]
    set Status = STATUS_FAILED
    set MappedOption = $($0)
    set OptionList = ^(MapOfOptions, 0)
    ifcontains $($0) in $(OptionList)
        set MappedOption = #(MapOfOptions, $($0), 1)
    endif
    set Status = STATUS_SUCCESSFUL
    Return $(Status) $(MappedOption)
[ServicesEntry]
    CurrentPortEntry  = "" ? $(!LIBHANDLE) GetDevicemapValue KeyboardPort  \Device\KeyboardPort0
    CurrentClassEntry = "" ? $(!LIBHANDLE) GetDevicemapValue KeyboardClass \Device\KeyboardClass0
[InstallOption]
    set Status   = STATUS_FAILED
    set DrivesToFree = {}
    set Option   = $($1)
    set SrcDir   = $($2)
    set AddCopy  = $($3)
    set DoCopy   = $($4)
    set DoConfig = $($5)
    set LanguageList = ^(LanguagesSupported, 1)
    Ifcontains(i) $($0) in $(LanguageList)
    else
        set Status = STATUS_NOLANGUAGE
        goto finish_InstallOption
    endif
    read-syms Strings$($0)
    set OptionList = ^(Options, 0)
    ifcontains $(Option) in $(OptionList)
    else
        goto finish_InstallOption
    endif
    set OptionList = ""
    read-syms ServicesEntry
    detect    ServicesEntry
    Debug-Output "KEYBOARD.INF: Current Port Entry is:  "$(CurrentPortEntry)
    Debug-Output "KEYBOARD.INF: Current Class Entry is: "$(CurrentClassEntry)
    set PortDriver  = #(Options, $(Option), 1)
    set ClassDriver = #(Options, $(Option), 2)
    Debug-Output "KEYBOARD.INF: New Port Entry is:      "$(PortDriver)
    Debug-Output "KEYBOARD.INF: New Class Entry is:     "$(ClassDriver)
installtheoption = +
    ifstr(i) $(AddCopy) == "YES"
        set DoActualCopy = NO
        set FileToCheck = #(Files-KeyboardPortDrivers, $(PortDriver), 2)
        LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSSYSPATH)"\drivers\"$(FileToCheck)
        ifstr(i) $(STATUS) == NO
            set DoActualCopy = YES
        else
            set FileToCheck = #(Files-KeyboardClassDrivers, $(ClassDriver), 2)
            LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSSYSPATH)"\drivers\"$(FileToCheck)
            ifstr(i) $(STATUS) == NO
                set DoActualCopy = YES
            endif
        endif
        ifstr(i) $(DoActualCopy) == NO
            shell "subroutn.inf" DriversExist $($0) $(String1)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "KEYBOARD.INF: shelling DriversExist failed"
                goto finish_InstallOption
            endif
            ifstr(i) $($R0) == STATUS_CURRENT
            else-ifstr(i) $($R0) == STATUS_NEW
                set DoActualCopy = YES
            else-ifstr(i) $($R0) == STATUS_USERCANCEL
                Debug-Output "KEYBOARD.INF: User cancelled Keyboard installation"
                goto finish_InstallOption
            else
                Debug-Output "KEYBOARD.INF: Error reported in DriversExist routine in SUBROUTN.INF"
                goto finish_InstallOption
            endif
        endif
        ifstr(i) $(DoActualCopy) == YES
            shell "subroutn.inf" DoAskSourceEx $(SrcDir) $(String2)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "KEYBOARD.INF: shelling DoAskSourceEx failed"
                goto finish_InstallOption
            endif
            ifstr(i) $($R0) == STATUS_SUCCESSFUL
                set SrcDir = $($R1)
                ifstr(i) $($R2) != ""
                    set DrivesToFree = >($(DrivesToFree), $($R2))
                endif
            else
                Debug-Output "KEYBOARD.INF: User cancelled asking source."
                goto finish_InstallOption
            endif
            install Install-AddCopyOption
            ifstr(i) $(STF_INSTALL_OUTCOME) != "STF_SUCCESS"
                Debug-Output "KEYBOARD.INF: Adding keyboard files to copy list failed"
                goto finish_InstallOption
            endif
        else
            set DoCopy = NO
        endif
    endif
    ifstr(i) $(DoCopy) == "YES"
        read-syms ProgressCopy$($0)
        install Install-DoCopyOption
        ifstr(i) $(STF_INSTALL_OUTCOME) == "STF_FAILURE"
            Debug-Output "KEYBOARD.INF: Copying files failed."
            goto finish_InstallOption
        else-ifstr(i) $(STF_INSTALL_OUTCOME) == "STF_USERQUIT"
            Debug-Output "KEYBOARD.INF: User quit copying files."
            set Status = STATUS_USERCANCEL
            goto finish_InstallOption
        endif
    endif
    ifstr(i) $(DoConfig) == "YES"
        shell "registry.inf" CheckSetupModify
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            goto finish_InstallOption
        endif
        ifstr(i) $($R0) != STATUS_SUCCESSFUL
            goto finish_InstallOption
        endif
        ifstr(i) $(PortDriver) != ""
            set ServiceNode   = $(PortDriver)
            set ServiceBinary = %SystemRoot%\System32\drivers\#(Files-KeyboardPortDrivers, $(PortDriver), 2)
            set Type             = $(#(PortDrivers, $(PortDriver), 1))
            set Group            =   #(PortDrivers, $(PortDriver), 2)
            set ErrorControl     = $(#(PortDrivers, $(PortDriver), 3))
            set Tag              =   #(PortDrivers, $(PortDriver), 4)
            set EventMessageFile =   #(PortDrivers, $(PortDriver), 5)
            set TypesSupported   =   #(PortDrivers, $(PortDriver), 6)
            set ServicesValues   = { +
                    {Type,           0, $(!REG_VT_DWORD),     $(Type)                  }, +
                    {Start,          0, $(!REG_VT_DWORD),     $(!SERVICE_SYSTEM_START) }, +
                    {Group,          0, $(!REG_VT_SZ),        $(Group)                 }, +
                    {ErrorControl,   0, $(!REG_VT_DWORD),     $(ErrorControl)          }, +
                    {Tag,            0, $(!REG_VT_DWORD),     $(Tag)                   }, +
                    {BinaryPathName, 0, $(!REG_VT_EXPAND_SZ), $(ServiceBinary)         }  +
                    }
            set ParametersValues = ""
            set DeviceValues     = {}
            set EventLogValues   = { +
                    {EventMessageFile, 0, $(!REG_VT_EXPAND_SZ), $(EventMessageFile) }, +
                    {TypesSupported,   0, $(!REG_VT_DWORD),     $(TypesSupported)   }  +
                    }
            shell "registry.inf"  MakeServicesEntry $(ServiceNode)      +
                                                    $(ServicesValues)   +
                                                    $(ParametersValues) +
                                                    $(DeviceValues)     +
                                                    $(EventLogValues)   +
                                                    Parameters
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "KEYBOARD.INF: Couldn't execute MakeServicesEntry in registry.inf"
                goto errorconfig
            endif
            ifstr(i) $($R0) != STATUS_SUCCESSFUL
                Debug-Output "KEYBOARD.INF: MakeServicesEntry failed for keyboard"
                goto errorconfig
            endif
        endif
        ifstr(i) $(ClassDriver) != ""
            set ServiceNode   = $(ClassDriver)
            set ServiceBinary = %SystemRoot%\System32\drivers\#(Files-KeyboardClassDrivers, $(ClassDriver), 2)
            set Type             = $(#(ClassDrivers, $(ClassDriver), 1))
            set Group            =   #(ClassDrivers, $(ClassDriver), 2)
            set ErrorControl     = $(#(ClassDrivers, $(ClassDriver), 3))
            set Tag              =   #(ClassDrivers, $(ClassDriver), 4)
            set EventMessageFile =   #(ClassDrivers, $(ClassDriver), 5)
            set TypesSupported   =   #(ClassDrivers, $(ClassDriver), 6)
            set ServicesValues   = { +
                    {Type,           0, $(!REG_VT_DWORD),     $(Type)                  }, +
                    {Start,          0, $(!REG_VT_DWORD),     $(!SERVICE_SYSTEM_START) }, +
                    {Group,          0, $(!REG_VT_SZ),        $(Group)                 }, +
                    {ErrorControl,   0, $(!REG_VT_DWORD),     $(ErrorControl)          }, +
                    {Tag,            0, $(!REG_VT_DWORD),     $(Tag)                   }, +
                    {BinaryPathName, 0, $(!REG_VT_EXPAND_SZ), $(ServiceBinary)         }  +
                    }
            set ParametersValues = ""
            set DeviceValues     = {}
            set EventLogValues   = { +
                    {EventMessageFile, 0, $(!REG_VT_EXPAND_SZ), $(EventMessageFile) }, +
                    {TypesSupported,   0, $(!REG_VT_DWORD),     $(TypesSupported)   }  +
                    }
            shell "registry.inf"  MakeServicesEntry $(ServiceNode)      +
                                                    $(ServicesValues)   +
                                                    $(ParametersValues) +
                                                    $(DeviceValues)     +
                                                    $(EventLogValues)   +
                                                    Parameters
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "KEYBOARD.INF: Couldn't execute MakeServicesEntry in registry.inf"
                goto errorconfig
            endif
            ifstr(i) $($R0) != STATUS_SUCCESSFUL
                Debug-Output "KEYBOARD.INF: MakeServicesEntry failed for keyboard"
                goto errorconfig
            endif
        endif
        ifstr(i) $(CurrentPortEntry) != $(PortDriver)
            ifstr(i) $(CurrentPortEntry) != ""
                ifstr(i) $(CurrentPortEntry) != i8042prt
                    shell "registry.inf" ModifyServicesEntry $(CurrentPortEntry) $(!SERVICE_DISABLED)
                    ifint $($ShellCode) != $(!SHELL_CODE_OK)
                        Debug-Output "KEYBOARD.INF: Couldn't find DisableServicesEntry in registry.inf"
                        goto errorconfig
                    endif
                    ifstr(i) $($R0) != STATUS_SUCCESSFUL
                        Debug-Output "KEYBOARD.INF: DisableServices entry failed"
                        goto errorconfig
                    endif
                endif
            endif
        endif
        ifstr(i) $(CurrentClassEntry) != $(ClassDriver)
            ifstr(i) $(CurrentClassEntry) != ""
                shell "registry.inf" ModifyServicesEntry $(CurrentClassEntry) $(!SERVICE_DISABLED)
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    Debug-Output "KEYBOARD.INF: Couldn't find DisableServicesEntry in registry.inf"
                    goto errorconfig
                endif
                ifstr(i) $($R0) != STATUS_SUCCESSFUL
                    Debug-Output "KEYBOARD.INF: DisableServices entry failed"
                    goto errorconfig
                endif
            endif
        endif
        goto configdone
errorconfig = +
        ifstr(i) $(CurrentPortEntry) != $(PortDriver)
            ifstr(i) $(PortDriver) != ""
                shell "registry.inf" ModifyServicesEntry $(PortDriver) $(!SERVICE_DISABLED)
            endif
            ifstr(i) $(CurrentPortEntry) != ""
                shell "registry.inf" ModifyServicesEntry $(CurrentPortEntry) $(!SERVICE_SYSTEM_START)
            endif
        endif
        ifstr(i) $(CurrentClassEntry) != $(ClassDriver)
            ifstr(i) $(ClassDriver) != ""
                shell "registry.inf" ModifyServicesEntry $(ClassDriver) $(!SERVICE_DISABLED)
            endif
            ifstr(i) $(CurrentClassEntry) != ""
                shell "registry.inf" ModifyServicesEntry $(CurrentClassEntry) $(!SERVICE_SYSTEM_START)
            endif
        endif
        goto finish_InstallOption
configdone = +
    endif
    set Status = STATUS_SUCCESSFUL
finish_InstallOption = +
    ForListDo $(DrivesToFree)
        LibraryProcedure STATUS,$(!LIBHANDLE), DeleteNetConnection $($) "TRUE"
    EndForListDo
    Return $(Status)
[Install-AddCopyOption]
    set STF_VITAL = ""
    AddSectionKeyFileToCopyList   Files-KeyboardPortDrivers     +
                                  $(PortDriver)                 +
                                  $(SrcDir)                     +
                                  $(!STF_WINDOWSSYSPATH)\drivers
    AddSectionKeyFileToCopyList   Files-KeyboardClassDrivers     +
                                  $(ClassDriver)                 +
                                  $(SrcDir)                      +
                                  $(!STF_WINDOWSSYSPATH)\drivers
    exit
[Install-DoCopyOption]
    CopyFilesInCopyList
    exit
[Source Media Descriptions]
    1  = "Windows NT Advanced Server Setup Disk #1"	, TAGFILE = disk1
    2  = "Windows NT Advanced Server Setup CD-ROM Disk"	, TAGFILE = disk2
[ProductType]
STF_PRODUCT  = LanmanNT
STF_PLATFORM = Mips
[Files-KeyboardClassDrivers]
kbdclass = 2,KBDCLASS.SYS , SIZE=19968
[Files-KeyboardPortDrivers]
i8042prt = 2,I8042PRT.SYS , SIZE=43520
[LanguagesSupported]
    ENG
[OptionsTextENG]
    STANDARD  = "XT, AT or Enhanced Keyboard (83-102 key)"
[ProgressCopyENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correcly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
[StringsENG]
    String1 = "Keyboard"
    String2 = "Please enter the full path to the Windows NT Keyboard "+
              "driver files.  Then choose Continue."



